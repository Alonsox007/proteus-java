apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'com.github.sherter.google-java-format'

repositories {
    jcenter()
}

compileJava {
    options.compilerArgs << '-Xlint:all,-overloads,-rawtypes,-unchecked'
}

googleJavaFormat {
    toolVersion = '1.6'
    exclude '**/generated'
}

// custom tasks for creating source/javadoc jars
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
    baseName = "${project.ext.artifactName}"
    version = "${project.version}"
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
    baseName = "${project.ext.artifactName}"
    version = "${project.version}"
}

// add javadoc/source jar tasks as artifacts
artifacts {
    archives sourcesJar, javadocJar
}

jar {
    baseName = "${artifactName}"
    version = "${project.version}"
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java

            artifactId "${artifactName}"
            artifact sourcesJar
            artifact javadocJar
        }
    }
}

dependencies {
    testCompile 'junit:junit:4.12'

    testCompile 'io.projectreactor:reactor-test:3.1.7.RELEASE'
    testCompile 'com.google.protobuf:protobuf-java:3.5.0'
    testCompile 'org.hdrhistogram:HdrHistogram:2.1.10'
    testCompile 'org.apache.logging.log4j:log4j-api:2.8.2'
    testCompile 'org.apache.logging.log4j:log4j-core:2.8.2'
    testCompile 'org.apache.logging.log4j:log4j-slf4j-impl:2.8.2'
    testCompile 'io.rsocket:rsocket-transport-netty:0.11.3'
    testCompile 'io.rsocket:rsocket-transport-local:0.11.3'
    testCompile 'org.mockito:mockito-all:1.10.19'
}

test {
    testLogging {
        exceptionFormat = 'full'
    }
}